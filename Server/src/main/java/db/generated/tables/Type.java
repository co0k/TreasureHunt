/**
 * This class is generated by jOOQ
 */
package main.java.db.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Type extends org.jooq.impl.TableImpl<main.java.db.generated.tables.records.TypeRecord> {

	private static final long serialVersionUID = -1399329329;

	/**
	 * The reference instance of <code>library.type</code>
	 */
	public static final main.java.db.generated.tables.Type TYPE = new main.java.db.generated.tables.Type();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<main.java.db.generated.tables.records.TypeRecord> getRecordType() {
		return main.java.db.generated.tables.records.TypeRecord.class;
	}

	/**
	 * The column <code>library.type.Tid</code>.
	 */
	public final org.jooq.TableField<main.java.db.generated.tables.records.TypeRecord, java.lang.Integer> TID = createField("Tid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>library.type.name</code>.
	 */
	public final org.jooq.TableField<main.java.db.generated.tables.records.TypeRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>library.type.typeXP</code>.
	 */
	public final org.jooq.TableField<main.java.db.generated.tables.records.TypeRecord, java.lang.Integer> TYPEXP = createField("typeXP", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>library.type</code> table reference
	 */
	public Type() {
		this("type", null);
	}

	/**
	 * Create an aliased <code>library.type</code> table reference
	 */
	public Type(java.lang.String alias) {
		this(alias, main.java.db.generated.tables.Type.TYPE);
	}

	private Type(java.lang.String alias, org.jooq.Table<main.java.db.generated.tables.records.TypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private Type(java.lang.String alias, org.jooq.Table<main.java.db.generated.tables.records.TypeRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, main.java.db.generated.Library.LIBRARY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<main.java.db.generated.tables.records.TypeRecord, java.lang.Integer> getIdentity() {
		return main.java.db.generated.Keys.IDENTITY_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<main.java.db.generated.tables.records.TypeRecord> getPrimaryKey() {
		return main.java.db.generated.Keys.KEY_TYPE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<main.java.db.generated.tables.records.TypeRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<main.java.db.generated.tables.records.TypeRecord>>asList(main.java.db.generated.Keys.KEY_TYPE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public main.java.db.generated.tables.Type as(java.lang.String alias) {
		return new main.java.db.generated.tables.Type(alias, this);
	}

	/**
	 * Rename this table
	 */
	public main.java.db.generated.tables.Type rename(java.lang.String name) {
		return new main.java.db.generated.tables.Type(name, null);
	}
}
