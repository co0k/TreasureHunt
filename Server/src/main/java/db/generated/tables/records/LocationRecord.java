/**
 * This class is generated by jOOQ
 */
package main.java.db.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationRecord extends org.jooq.impl.UpdatableRecordImpl<main.java.db.generated.tables.records.LocationRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.Double, java.lang.Double, java.lang.Integer> {

	private static final long serialVersionUID = -1947022332;

	/**
	 * Setter for <code>library.location.Lid</code>.
	 */
	public void setLid(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>library.location.Lid</code>.
	 */
	public java.lang.Integer getLid() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>library.location.x</code>.
	 */
	public void setX(java.lang.Double value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>library.location.x</code>.
	 */
	public java.lang.Double getX() {
		return (java.lang.Double) getValue(1);
	}

	/**
	 * Setter for <code>library.location.y</code>.
	 */
	public void setY(java.lang.Double value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>library.location.y</code>.
	 */
	public java.lang.Double getY() {
		return (java.lang.Double) getValue(2);
	}

	/**
	 * Setter for <code>library.location.outXP</code>.
	 */
	public void setOutxp(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>library.location.outXP</code>.
	 */
	public java.lang.Integer getOutxp() {
		return (java.lang.Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Double, java.lang.Double, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.Double, java.lang.Double, java.lang.Integer> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return main.java.db.generated.tables.Location.LOCATION.LID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field2() {
		return main.java.db.generated.tables.Location.LOCATION.X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field3() {
		return main.java.db.generated.tables.Location.LOCATION.Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return main.java.db.generated.tables.Location.LOCATION.OUTXP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getLid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value2() {
		return getX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value3() {
		return getY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getOutxp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value1(java.lang.Integer value) {
		setLid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value2(java.lang.Double value) {
		setX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value3(java.lang.Double value) {
		setY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord value4(java.lang.Integer value) {
		setOutxp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LocationRecord values(java.lang.Integer value1, java.lang.Double value2, java.lang.Double value3, java.lang.Integer value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LocationRecord
	 */
	public LocationRecord() {
		super(main.java.db.generated.tables.Location.LOCATION);
	}

	/**
	 * Create a detached, initialised LocationRecord
	 */
	public LocationRecord(java.lang.Integer lid, java.lang.Double x, java.lang.Double y, java.lang.Integer outxp) {
		super(main.java.db.generated.tables.Location.LOCATION);

		setValue(0, lid);
		setValue(1, x);
		setValue(2, y);
		setValue(3, outxp);
	}
}
