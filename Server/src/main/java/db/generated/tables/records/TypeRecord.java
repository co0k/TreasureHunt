/**
 * This class is generated by jOOQ
 */
package main.java.db.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypeRecord extends org.jooq.impl.UpdatableRecordImpl<main.java.db.generated.tables.records.TypeRecord> implements org.jooq.Record3<java.lang.Integer, java.lang.String, java.lang.Integer> {

	private static final long serialVersionUID = 55197940;

	/**
	 * Setter for <code>library.type.Tid</code>.
	 */
	public void setTid(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>library.type.Tid</code>.
	 */
	public java.lang.Integer getTid() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>library.type.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>library.type.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>library.type.typeXP</code>.
	 */
	public void setTypexp(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>library.type.typeXP</code>.
	 */
	public java.lang.Integer getTypexp() {
		return (java.lang.Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.lang.String, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.Integer, java.lang.String, java.lang.Integer> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return main.java.db.generated.tables.Type.TYPE.TID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return main.java.db.generated.tables.Type.TYPE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return main.java.db.generated.tables.Type.TYPE.TYPEXP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getTid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getTypexp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypeRecord value1(java.lang.Integer value) {
		setTid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypeRecord value2(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypeRecord value3(java.lang.Integer value) {
		setTypexp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypeRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.Integer value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TypeRecord
	 */
	public TypeRecord() {
		super(main.java.db.generated.tables.Type.TYPE);
	}

	/**
	 * Create a detached, initialised TypeRecord
	 */
	public TypeRecord(java.lang.Integer tid, java.lang.String name, java.lang.Integer typexp) {
		super(main.java.db.generated.tables.Type.TYPE);

		setValue(0, tid);
		setValue(1, name);
		setValue(2, typexp);
	}
}
