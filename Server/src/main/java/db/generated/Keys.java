/**
 * This class is generated by jOOQ
 */
package main.java.db.generated;

/**
 * A class modelling foreign key relationships between tables of the <code>library</code> 
 * schema
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<main.java.db.generated.tables.records.BoxRecord, java.lang.Integer> IDENTITY_BOX = Identities0.IDENTITY_BOX;
	public static final org.jooq.Identity<main.java.db.generated.tables.records.ContentRecord, java.lang.Integer> IDENTITY_CONTENT = Identities0.IDENTITY_CONTENT;
	public static final org.jooq.Identity<main.java.db.generated.tables.records.LocationRecord, java.lang.Integer> IDENTITY_LOCATION = Identities0.IDENTITY_LOCATION;
	public static final org.jooq.Identity<main.java.db.generated.tables.records.QuizRecord, java.lang.Integer> IDENTITY_QUIZ = Identities0.IDENTITY_QUIZ;
	public static final org.jooq.Identity<main.java.db.generated.tables.records.SizeRecord, java.lang.Integer> IDENTITY_SIZE = Identities0.IDENTITY_SIZE;
	public static final org.jooq.Identity<main.java.db.generated.tables.records.TypeRecord, java.lang.Integer> IDENTITY_TYPE = Identities0.IDENTITY_TYPE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.BoxRecord> KEY_BOX_PRIMARY = UniqueKeys0.KEY_BOX_PRIMARY;
	public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.ContentRecord> KEY_CONTENT_PRIMARY = UniqueKeys0.KEY_CONTENT_PRIMARY;
	public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.LocationRecord> KEY_LOCATION_PRIMARY = UniqueKeys0.KEY_LOCATION_PRIMARY;
	public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.QuizRecord> KEY_QUIZ_PRIMARY = UniqueKeys0.KEY_QUIZ_PRIMARY;
	public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.SizeRecord> KEY_SIZE_PRIMARY = UniqueKeys0.KEY_SIZE_PRIMARY;
	public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.TypeRecord> KEY_TYPE_PRIMARY = UniqueKeys0.KEY_TYPE_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<main.java.db.generated.tables.records.QuizRecord, main.java.db.generated.tables.records.LocationRecord> QUIZ_IBFK_1 = ForeignKeys0.QUIZ_IBFK_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<main.java.db.generated.tables.records.BoxRecord, java.lang.Integer> IDENTITY_BOX = createIdentity(main.java.db.generated.tables.Box.BOX, main.java.db.generated.tables.Box.BOX.BID);
		public static org.jooq.Identity<main.java.db.generated.tables.records.ContentRecord, java.lang.Integer> IDENTITY_CONTENT = createIdentity(main.java.db.generated.tables.Content.CONTENT, main.java.db.generated.tables.Content.CONTENT.CID);
		public static org.jooq.Identity<main.java.db.generated.tables.records.LocationRecord, java.lang.Integer> IDENTITY_LOCATION = createIdentity(main.java.db.generated.tables.Location.LOCATION, main.java.db.generated.tables.Location.LOCATION.LID);
		public static org.jooq.Identity<main.java.db.generated.tables.records.QuizRecord, java.lang.Integer> IDENTITY_QUIZ = createIdentity(main.java.db.generated.tables.Quiz.QUIZ, main.java.db.generated.tables.Quiz.QUIZ.QID);
		public static org.jooq.Identity<main.java.db.generated.tables.records.SizeRecord, java.lang.Integer> IDENTITY_SIZE = createIdentity(main.java.db.generated.tables.Size.SIZE, main.java.db.generated.tables.Size.SIZE.SID);
		public static org.jooq.Identity<main.java.db.generated.tables.records.TypeRecord, java.lang.Integer> IDENTITY_TYPE = createIdentity(main.java.db.generated.tables.Type.TYPE, main.java.db.generated.tables.Type.TYPE.TID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.BoxRecord> KEY_BOX_PRIMARY = createUniqueKey(main.java.db.generated.tables.Box.BOX, main.java.db.generated.tables.Box.BOX.BID);
		public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.ContentRecord> KEY_CONTENT_PRIMARY = createUniqueKey(main.java.db.generated.tables.Content.CONTENT, main.java.db.generated.tables.Content.CONTENT.CID);
		public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.LocationRecord> KEY_LOCATION_PRIMARY = createUniqueKey(main.java.db.generated.tables.Location.LOCATION, main.java.db.generated.tables.Location.LOCATION.LID);
		public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.QuizRecord> KEY_QUIZ_PRIMARY = createUniqueKey(main.java.db.generated.tables.Quiz.QUIZ, main.java.db.generated.tables.Quiz.QUIZ.QID);
		public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.SizeRecord> KEY_SIZE_PRIMARY = createUniqueKey(main.java.db.generated.tables.Size.SIZE, main.java.db.generated.tables.Size.SIZE.SID);
		public static final org.jooq.UniqueKey<main.java.db.generated.tables.records.TypeRecord> KEY_TYPE_PRIMARY = createUniqueKey(main.java.db.generated.tables.Type.TYPE, main.java.db.generated.tables.Type.TYPE.TID);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<main.java.db.generated.tables.records.QuizRecord, main.java.db.generated.tables.records.LocationRecord> QUIZ_IBFK_1 = createForeignKey(main.java.db.generated.Keys.KEY_LOCATION_PRIMARY, main.java.db.generated.tables.Quiz.QUIZ, main.java.db.generated.tables.Quiz.QUIZ.LID);
	}
}
